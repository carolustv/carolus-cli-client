use clap::{App, Arg, SubCommand};

pub fn build_cli() -> App<'static, 'static> {
    App::new("carolus-cli")
        .version("0.1.0")
        .about("CLI client for Carolus")
        .author("Simon Dickson")
        .arg(Arg::with_name("v")
            .short("v")
            .multiple(true)
            .help("Sets the level of verbosity"))
        .arg(Arg::with_name("host")
            .short("h")
            .env("CAROLUS_SERVER_URL")
            .help("The url of the Carolus Server"))
        .subcommand(SubCommand::with_name("completions")
            .about("generates shell completions")
            .arg(Arg::with_name("shell")
                .required(true)
                .takes_value(true)
                .index(1)
                .help("shell, supported: [zsh,bash,fish,powershell,elvish]")))
        .subcommand(SubCommand::with_name("play")
            .about("plays a video in the player")
            .subcommand(SubCommand::with_name("movie")
                .about("plays a movie")
                .arg(Arg::with_name("title")
                    .short("t")
                    .required(true)
                    .takes_value(true)
                    .help("title of movie to play"))
                .arg(Arg::with_name("year")
                    .short("y")
                    .takes_value(true)
                    .help("year of movie to play (only used when there are conflicts)")))
            .subcommand(SubCommand::with_name("tv")
                .about("plays a tv episode")
                .arg(Arg::with_name("title")
                    .short("t")
                    .required(true)
                    .takes_value(true)
                    .help("title of tv show to play"))
                .arg(Arg::with_name("series")
                    .short("s")
                    .required(true)
                    .takes_value(true)
                    .help("series number of tv show to play"))
                .arg(Arg::with_name("episode")
                    .short("e")
                    .required(true)
                    .takes_value(true)
                    .help("episode number of tv show to play"))
                .arg(Arg::with_name("year")
                    .short("y")
                    .takes_value(true)
                    .help("year of movie to play (only used when there are conflicts)"))))
}
